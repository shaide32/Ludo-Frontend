{"version":3,"sources":["actors/cell.js","constants.js","utils/cells.js","actors/player.js","actors/playerToken.js","utils/start.js","components/Start.js","utils/game.js","components/Tokens.js","utils/playerTokens.js","actors/game.js","components/Login/Login.js","utils/refreshTokenSetup.js","components/Logout.js","App.js","utils/players.js","components/useToken.js","components/Cell.js","reportWebVitals.js","index.js"],"names":["Cell","id","cellType","safeFor","homeFor","station","this","CELL_TYPE","PLAYER_TYPE","TOKEN_STATUS","GAME_STATUS","cellId","createCellsUtil","color1","color2","i","cells","push","getCellPostionStyles","cell","styles","position","left","bottom","top","Player","label","startCell","endCell","homeStartCell","skippedCells","tokenRemaining","PlayerToken","player_id","status","focussed","getStartPostionStyles","color","right","drawStartRect","game","className","playerTurn","style","drawStartRects","getGameStatusLabel","players","winningPlayer","find","player","activePlayer","changeTurns","updateGame","playerTokens","updatePlayerTokens","endTurn","map","playerToken","updateTokenPostion","token","updatePlayers","tokenIndex","findIndex","pToken","newToken","diceVal","cellIndex","includes","moveToken","existingTokenIndex","playerIndex","finishGame","preserveTurns","winner","disableSkipButton","focussedTokens","filter","waitingForTokens","length","drawToken","getTokenPostionStyles","onClick","Game","turnCount","Login","props","user","updateUser","clientId","buttonText","onSuccess","res","console","log","profileObj","name","refreshTiming","tokenObj","expires_in","refreshToken","a","reloadAuthResponse","newAuthRes","localStorage","setItem","id_token","setTimeout","refreshTokenSetup","onFailure","cookiePolicy","marginTop","isSignedIn","Logout","onLogoutSuccess","App","useState","createCells","createPlayers","createPlayerTokens","tokenString","getItem","userToken","JSON","parse","getToken","setToken","stringify","useToken","diceClassName","drawCells","Math","floor","random","rollDice","disabled","startGame","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qOAUeA,EATX,WAAYC,EAAIC,GAA4D,IAAlDC,EAAiD,uDAAvC,KAAMC,EAAiC,uDAAvB,KAAMC,EAAiB,4EACvEC,KAAKL,GAAKA,EACVK,KAAKJ,SAAWA,EAChBI,KAAKH,QAAUA,EACfG,KAAKF,QAAUA,EACfE,KAAKD,QAAUA,GCNjBE,EACM,SADNA,EAEI,OAFJA,EAGI,OAGJC,EACG,MADHA,EAEI,OAFJA,EAGK,QAHLA,EAIM,SAGNC,EACW,cADXA,EAEM,SAFNA,EAGQ,WAGRC,EACW,cADXA,EAGQ,WAHRA,EAIgB,mBAJhBA,EAKiB,oBCrBnBC,EAAS,EAEPC,EAAkB,SAACC,EAAQC,GAC7B,IAAIC,EAAI,EACFC,EAAQ,GAGd,IAFAA,EAAMC,KAAK,IAAIjB,EAAKW,IAAUJ,IAC9BS,EAAMC,KAAK,IAAIjB,EAAKW,IAAUJ,EAAgBM,EAAQ,MAAM,IACxDE,EAAI,EAAGA,EAAG,EAAGA,IACbC,EAAMC,KAAK,IAAIjB,EAAKW,IAAUJ,IAIlC,IAFAS,EAAMC,KAAK,IAAIjB,EAAKW,IAAU,KAAM,KAAM,MAAM,IAE5CI,EAAI,EAAGA,EAAG,EAAGA,IACbC,EAAMC,KAAK,IAAIjB,EAAKW,IAAUJ,IAGlC,IAAIQ,EAAI,EAAGA,EAAG,EAAGA,IACbC,EAAMC,KAAK,IAAIjB,EAAKW,IAAUJ,EAAgBO,IAGlD,OADAE,EAAMC,KAAK,IAAIjB,EAAKW,IAAUJ,EAAgBO,EAAQA,IAC/CE,GAcLE,EAAuB,SAACC,GAC1B,IAAMC,EAAS,CACXC,SAAU,YAyEd,OAtEGF,EAAKlB,GAAK,GACTmB,EAAOE,KAAO,QACdF,EAAOG,OAAmB,GAAVJ,EAAKlB,GAAU,MAE3BkB,EAAKlB,IAAM,IAAMkB,EAAKlB,IAAM,IAChCmB,EAAOG,OAA0B,IAAhBJ,EAAKlB,GAAK,IAAW,KACvB,KAAZkB,EAAKlB,GACJmB,EAAOE,KAAO,QAEdF,EAAOE,KAAO,SAGdH,EAAKlB,IAAM,IAAMkB,EAAKlB,IAAM,IAChCmB,EAAOE,KAAO,QACdF,EAAOG,OAAS,IAAuB,IAAhBJ,EAAKlB,GAAK,IAAW,MAGxCkB,EAAKlB,IAAM,GAAKkB,EAAKlB,IAAM,IAC/BmB,EAAOE,KAAO,IAAsB,IAAfH,EAAKlB,GAAK,GAAU,KACzCmB,EAAOI,IAAM,SAETL,EAAKlB,IAAM,IAAMkB,EAAKlB,IAAM,IAChCmB,EAAOE,KAAwB,IAAhBH,EAAKlB,GAAK,IAAW,KACrB,KAAZkB,EAAKlB,GACJmB,EAAOI,IAAM,QAEbJ,EAAOI,IAAM,SAGbL,EAAKlB,IAAM,IAAMkB,EAAKlB,IAAM,IAChCmB,EAAOE,KAAwB,IAAhBH,EAAKlB,GAAK,IAAW,KACpCmB,EAAOI,IAAM,SAGTL,EAAKlB,IAAM,IAAMkB,EAAKlB,IAAM,IAChCmB,EAAOE,KAAO,QACdF,EAAOG,OAAS,IAAuB,IAAhBJ,EAAKlB,GAAK,IAAW,MAExCkB,EAAKlB,IAAM,IAAMkB,EAAKlB,IAAM,GACjB,KAAZkB,EAAKlB,IACJmB,EAAOE,KAAO,QACdF,EAAOG,OAAS,IAA6B,IAAhBJ,EAAKlB,GAAK,IAAW,OAElDmB,EAAOE,KAAO,QACdF,EAAOG,OAAS,IAA6B,IAAhBJ,EAAKlB,GAAK,IAAW,MAGlDkB,EAAKlB,IAAM,IAAMkB,EAAKlB,IAAM,IAChCmB,EAAOE,KAAO,QACdF,EAAOG,OAAS,IAA6B,IAAhBJ,EAAKlB,GAAK,IAAW,MAG9CkB,EAAKlB,IAAM,IAAMkB,EAAKlB,IAAM,IAChCmB,EAAOE,KAAO,IAAuB,IAAhBH,EAAKlB,GAAK,IAAW,KAC1CmB,EAAOI,IAAM,SAETL,EAAKlB,IAAM,IAAMkB,EAAKlB,IAAM,GACjB,KAAZkB,EAAKlB,IACJmB,EAAOE,KAAO,IAA6B,IAAhBH,EAAKlB,GAAK,IAAW,KAChDmB,EAAOI,IAAM,UAEbJ,EAAOE,KAAO,IAA6B,IAAhBH,EAAKlB,GAAK,IAAW,KAChDmB,EAAOI,IAAM,SAGbL,EAAKlB,IAAM,IAAMkB,EAAKlB,IAAM,KAChCmB,EAAOE,KAAO,IAA6B,IAAhBH,EAAKlB,GAAK,IAAW,KAChDmB,EAAOI,IAAM,SAGVJ,GCpGIK,EAXX,WAAYxB,EAAIyB,EAAOC,EAAWC,EAASC,EAAeC,GAAe,oBACrExB,KAAKL,GAAKA,EACVK,KAAKoB,MAAQA,EACbpB,KAAKyB,eAAiB,EACtBzB,KAAKqB,UAAYA,EACjBrB,KAAKsB,QAAUA,EACftB,KAAKuB,cAAgBA,EACrBvB,KAAKwB,aAAeA,GCIbE,EATX,WAAY/B,EAAIgC,EAAWZ,GAA8C,IAApCa,EAAmC,uDAA1BzB,EAA0B,oBACpEH,KAAKL,GAAKA,EACVK,KAAK2B,UAAYA,EACjB3B,KAAKe,SAAWA,EAChBf,KAAK4B,OAASA,EACd5B,KAAK6B,UAAW,G,eCcTC,EApBe,SAACC,GAC3B,IAAMjB,EAAS,GAef,OAbGiB,IAAU7B,GACTY,EAAOE,KAAO,MACdF,EAAOG,OAAS,OACVc,IAAU7B,GAChBY,EAAOE,KAAO,MACdF,EAAOI,IAAM,OACPa,IAAU7B,GAChBY,EAAOkB,MAAQ,MACflB,EAAOI,IAAM,OACPa,IAAU7B,IAChBY,EAAOkB,MAAQ,MACflB,EAAOG,OAAS,OAEbH,GCfLmB,EAAgB,SAACC,EAAMH,GACzB,IAAMjB,EAASgB,EAAsBC,GACjCI,EAAY,GAahB,OAZGJ,IAAU7B,EACTiC,GAAa,WACPJ,IAAU7B,EAChBiC,GAAa,aACPJ,IAAU7B,EAChBiC,GAAa,cACPJ,IAAU7B,IAChBiC,GAAa,aAEdD,EAAKN,SAAWxB,GAAgC8B,EAAKE,aAAeL,IACnEI,GAAa,WAGb,sBAAiBA,UAAS,gBAAWA,GAAaE,MAAOvB,EAAzD,UACI,qBAAKqB,UAAU,mCACf,qBAAKA,UAAU,mCACf,qBAAKA,UAAU,sCACf,qBAAKA,UAAU,wCAJTJ,IASZO,EAAiB,SAACJ,GAEpB,OACG,gCAESD,EAAcC,EAAMhC,GAEpB+B,EAAcC,EAAMhC,GAEpB+B,EAAcC,EAAMhC,GAN7B,IAQS+B,EAAcC,EAAMhC,O,OC3B9BqC,EAAqB,SAACL,EAAMM,GAC9B,IAAIpB,EAAQ,GACZ,GAAGc,EAAKN,SAAWxB,EAAsB,CACrC,IAAMqC,EAAgBD,EAAQE,MAAK,SAAAC,GAAM,OAA8B,IAA1BA,EAAOlB,kBACpDL,GAAK,yBAAsBqB,EAAcrB,MAApC,eACF,GAAGc,EAAKN,SAAWxB,EACtBgB,GAAS,2DACN,CACH,IAAMwB,EAAeJ,EAAQE,MAAK,SAAAC,GAAM,OAAIA,EAAOhD,KAAOuC,EAAKE,cAC/DhB,GAAK,sBAAmBwB,EAAaxB,OAClCc,EAAKN,SAAWxB,EACfgB,GAAS,sCACHc,EAAKN,SAAWxB,IACtBgB,GAAS,2CAGjB,OAAOA,GAGLyB,EAAc,SAACX,EAAMY,EAAYC,EAAcC,GACjD,IAAIZ,EACDF,EAAKE,aAAelC,EACnBkC,EAAalC,EACPgC,EAAKE,aAAelC,EAC1BkC,EAAalC,EACPgC,EAAKE,aAAelC,EAC1BkC,EAAalC,EACPgC,EAAKE,aAAelC,IAC1BkC,EAAalC,GAEjB4C,EAAW,2BACJZ,GADG,IAENE,aACAR,OAAQxB,KAEZ6C,EAAQF,EAAcC,IAWpBC,EAAU,SAACF,EAAcC,GAO3BA,EANwBD,EAAaG,KAAI,SAACC,GACtC,OAAO,2BACAA,GADP,IAEItB,UAAU,SAuEhBuB,EAAqB,SAAC,GAAkG,IAAhGC,EAA+F,EAA/FA,MAAOnB,EAAwF,EAAxFA,KAAMM,EAAkF,EAAlFA,QAASc,EAAyE,EAAzEA,cAAeP,EAA0D,EAA1DA,aAAcC,EAA4C,EAA5CA,mBAAoBF,EAAwB,EAAxBA,WAAYpC,EAAY,EAAZA,MAC7G,GAAGwB,EAAKN,SAAWxB,GAAiCiD,EAAMxB,SAAU,CAChE,IAAMc,EAASH,EAAQE,MAAK,SAAAC,GAAM,OAAIA,EAAOhD,KAAO0D,EAAM1B,aACpD4B,EAAaR,EAAaS,WAAU,SAAAC,GAAM,OAAIA,EAAO9D,KAAO0D,EAAM1D,MAClE+D,EArCI,SAACC,EAASN,EAAOV,GAC/B,IAAIiB,EAAYP,EAAMtC,SAClBa,EAASyB,EAAMzB,OACnB,GAAGyB,EAAMzB,SAAWzB,EAChByD,EAAYjB,EAAOtB,UACnBO,EAASzB,OAET,KAAMwD,GAAS,CAEX,IADAC,IACMjB,EAAOnB,aAAaqC,SAASD,IAEd,OADjBA,IAEIA,EAAY,GAGpBD,IAEiB,KAAdC,IACCA,EAAY,GAQxB,OAHGA,IAAcjB,EAAOrB,UACpBM,EAASzB,GAEN,2BACAkD,GADP,IAEItC,SAAU6C,EACVhC,WAQiBkC,CAAU5B,EAAKyB,QAASN,EAAOV,GAE5CoB,EAAqBhB,EAAaS,WAAU,SAAAC,GAAM,OAClDA,EAAO1C,WAAa2C,EAAS3C,UAC7B0C,EAAO9B,YAAc+B,EAAS/B,aAiBlC,IAhB2B,IAAxBoC,GAA8BrD,EAAMgD,EAAS3C,UAAUhB,UACtDgD,EAAagB,GAAoBhD,UAAY,EAC7CgC,EAAagB,GAAoBnC,OAASzB,GAE9C4C,EAAaQ,GAAcG,EAYxBA,EAAS9B,SAAWzB,EAAuB,CAC1C,IAAM6D,EAAcxB,EAAQgB,WAAU,SAAAb,GAAM,OAAIA,EAAOhD,KAAO+D,EAAS/B,aACvEa,EAAQwB,GAAavC,iBACsB,IAAxCe,EAAQwB,GAAavC,gBACpBwC,EAAW/B,EAAMY,EAAYN,EAAQwB,IAEzCV,EAAc,YAAId,IAGnBkB,EAAS9B,SAAWzB,GAA0C,IAAjB+B,EAAKyB,QArHvC,SAACzB,EAAMY,EAAYC,EAAcC,GACnDF,EAAW,2BACJZ,GADG,IAENN,OAAQxB,KAEZ6C,EAAQF,EAAcC,GAiHdkB,CAAchC,EAAMY,EAAYC,EAAcC,GAG9CH,EAAYX,EAAMY,EAAYC,EAAcC,KAKlDiB,EAAa,SAAC/B,EAAMY,EAAYH,GAClCG,EAAW,2BACJZ,GADG,IAENN,OAAQxB,EACR+D,OAAQxB,EAAOhD,OAIjByE,EAAoB,SAAClC,EAAMa,GAC7B,IAAMsB,EAAiBtB,EAAauB,QAAO,SAAAb,GAAM,OAAIA,EAAO9B,YAAcO,EAAKE,YAAcqB,EAAO5B,YAC9F0C,EAAmBrC,EAAKN,SAAWxB,EAGzC,QAFmD,IAA1BiE,EAAeG,QAAgBD,ICvLtDE,EAAY,SAAC,GAAiG,IAAhGpB,EAA+F,EAA/FA,MAAOnB,EAAwF,EAAxFA,KAAMM,EAAkF,EAAlFA,QAASc,EAAyE,EAAzEA,cAAeP,EAA0D,EAA1DA,aAAcC,EAA4C,EAA5CA,mBAAoBF,EAAwB,EAAxBA,WAAYpC,EAAY,EAAZA,MAC7FI,ECqBoB,SAACuC,GAC3B,IAAIvC,EAAS,GA+Eb,OA9EGuC,EAAMzB,SAAWzB,EAEbkD,EAAM1B,YAAczB,GACnBY,EAAOE,KAAO,QACdF,EAAOG,OAAS,QACA,IAAboC,EAAM1D,IACLmB,EAAOE,KAAO,OACdF,EAAOG,OAAS,SACG,IAAboC,EAAM1D,IACZmB,EAAOE,KAAO,QACdF,EAAOG,OAAS,SACG,IAAboC,EAAM1D,IACZmB,EAAOE,KAAO,OACdF,EAAOG,OAAS,QACG,IAAboC,EAAM1D,KACZmB,EAAOE,KAAO,QACdF,EAAOG,OAAS,SAEdoC,EAAM1B,YAAczB,EACV,IAAbmD,EAAM1D,IACLmB,EAAOE,KAAO,OACdF,EAAOI,IAAM,SACM,IAAbmC,EAAM1D,IACZmB,EAAOE,KAAO,QACdF,EAAOI,IAAM,SACM,IAAbmC,EAAM1D,IACZmB,EAAOE,KAAO,OACdF,EAAOI,IAAM,QACM,IAAbmC,EAAM1D,KACZmB,EAAOE,KAAO,QACdF,EAAOI,IAAM,QAEXmC,EAAM1B,YAAczB,EACV,IAAbmD,EAAM1D,IACLmB,EAAOkB,MAAQ,OACflB,EAAOI,IAAM,SACM,KAAbmC,EAAM1D,IACZmB,EAAOkB,MAAQ,QACflB,EAAOI,IAAM,SACM,KAAbmC,EAAM1D,IACZmB,EAAOkB,MAAQ,OACflB,EAAOI,IAAM,QACM,KAAbmC,EAAM1D,KACZmB,EAAOkB,MAAQ,QACflB,EAAOI,IAAM,QAEXmC,EAAM1B,YAAczB,IACV,KAAbmD,EAAM1D,IACLmB,EAAOkB,MAAQ,OACflB,EAAOG,OAAS,SACG,KAAboC,EAAM1D,IACZmB,EAAOkB,MAAQ,QACflB,EAAOG,OAAS,SACG,KAAboC,EAAM1D,IACZmB,EAAOkB,MAAQ,OACflB,EAAOG,OAAS,QACG,KAAboC,EAAM1D,KACZmB,EAAOkB,MAAQ,QACflB,EAAOG,OAAS,SAGlBoC,EAAMzB,SAAWzB,EACpBkD,EAAM1B,YAAczB,GACnBY,EAAOE,KAAO,QACdF,EAAOG,OAAS,SACVoC,EAAM1B,YAAczB,GAC1BY,EAAOE,KAAO,QACdF,EAAOI,IAAM,SACPmC,EAAM1B,YAAczB,GAC1BY,EAAOE,KAAO,QACdF,EAAOG,OAAS,SACVoC,EAAM1B,YAAczB,IAC1BY,EAAOE,KAAO,QACdF,EAAOI,IAAM,SAEXmC,EAAMzB,SAAWzB,IAA2C,IAApBkD,EAAMtC,WACpDD,EAASF,EAAqB,CAACjB,GAAI0D,EAAMtC,YAEtCD,EDrGQ4D,CAAsBrB,GACjClB,EAAY,GAqBhB,OApBGkB,EAAM1B,YAAczB,EACnBiC,GAAa,YACPkB,EAAM1B,YAAczB,EAC1BiC,GAAa,cACPkB,EAAM1B,YAAczB,EAC1BiC,GAAa,eACPkB,EAAM1B,YAAczB,IAC1BiC,GAAa,cAEdD,EAAKN,SAAWxB,IACZ8B,EAAKE,aAAelC,GAAmBmD,EAAMxB,SAC5CM,GAAa,2BACPD,EAAKE,aAAelC,GAAqBmD,EAAMxB,SACrDM,GAAa,6BACPD,EAAKE,aAAelC,GAAsBmD,EAAMxB,SACtDM,GAAa,8BACPD,EAAKE,aAAelC,GAAoBmD,EAAMxB,WACpDM,GAAa,8BAIjB,qBAEIA,UAAS,gBAAWA,GACpBE,MAAOvB,EACP6D,QAAS,kBAAMvB,EAAmB,CAAEC,QAAOnB,OAAMM,UAASc,gBAAeP,eAAcC,qBAAoBF,aAAYpC,YAHlH2C,EAAM1D,KEjBRiF,EATX,aAAe,oBACX5E,KAAK4B,OAASxB,EACdJ,KAAK6E,UAAY,EACjB7E,KAAKoC,WAAa,KAClBpC,KAAK2D,QAAU,KACf3D,KAAKmE,OAAS,M,0CC8BPW,MA5Bf,SAAeC,GACkBA,EAArBC,KADW,IACLC,EAAeF,EAAfE,WAWhB,OACE,sBAAK9C,UAAU,gBAAf,UACE,oDACA,cAAC,cAAD,CACE+C,SAlBN,2EAmBMC,WAAW,QACXC,UAhBY,SAACC,GACjBC,QAAQC,IAAI,8BAA+BF,EAAIG,YAC/CP,EAAWI,EAAIG,WAAWC,MCdG,SAACJ,GAEhC,IAAIK,EAA6D,KAA5CL,EAAIM,SAASC,YAAc,MAE1CC,EAAY,uCAAG,4BAAAC,EAAA,sEACMT,EAAIU,qBADV,OACbC,EADa,OAEnBN,EAA2D,KAA1CM,EAAWJ,YAAc,MAC1CN,QAAQC,IAAI,cAAeS,GAE3BC,aAAaC,QAAQ,YAAaF,EAAWG,UAG7CC,WAAWP,EAAcH,GARN,2CAAH,qDAYlBU,WAAWP,EAAcH,GDDvBW,CAAkBhB,IAcdiB,UAXY,SAACjB,GACjBC,QAAQC,IAAI,qBAAsBF,IAW9BkB,aAAc,qBACdlE,MAAO,CAAEmE,UAAW,SACpBC,YAAY,QETLC,MAjBf,SAAgB3B,GAMd,OACE,8BACE,cAAC,eAAD,CACEG,SAXN,2EAYMC,WAAU,iBAAYJ,EAAMC,MAC5B2B,gBAVY,WAChBrB,QAAQC,IAAI,4BACZR,EAAME,WAAW,YC6EN2B,MArEf,WAAgB,IAAD,EACgBC,mBZQX,WAChBxG,EAAS,EACT,IAAMK,EAAQ,GAMd,OALAA,EAAMC,KAAN,MAAAD,EAAK,YAASJ,EAAiBJ,EAAkBA,KACjDQ,EAAMC,KAAN,MAAAD,EAAK,YAASJ,EAAiBJ,EAAoBA,KACnDQ,EAAMC,KAAN,MAAAD,EAAK,YAASJ,EAAiBJ,EAAqBA,KACpDQ,EAAMC,KAAN,MAAAD,EAAK,YAASJ,EAAiBJ,EAAmBA,KAE3CQ,EYhB6BoG,IADzB,mBACNpG,EADM,aAEoBmG,mBChBb,WAClB,IAAMrE,EAAU,GAShB,OARAA,EAAQ7B,KAAK,IAAIQ,EAAOjB,EAAiB,WAAY,EAAG,GAAI,GAC5D,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,MACxEsC,EAAQ7B,KAAK,IAAIQ,EAAOjB,EAAmB,WAAY,GAAI,GAAI,GAC/D,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,MACzEsC,EAAQ7B,KAAK,IAAIQ,EAAOjB,EAAoB,WAAY,GAAI,GAAI,GAChE,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,MACzEsC,EAAQ7B,KAAK,IAAIQ,EAAOjB,EAAkB,WAAY,GAAI,GAAI,GAC9D,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,MAClEsC,EDMiCuE,KAF7B,mBAENvE,EAFM,KAEGc,EAFH,OAG+BuD,mBLfnB,WACvB,IAAM9D,EAAe,GAiBrB,OAhBAA,EAAapC,KAAK,IAAIe,EAAY,EAAGxB,GAAkB,IACvD6C,EAAapC,KAAK,IAAIe,EAAY,EAAGxB,GAAkB,EAAGC,IAC1D4C,EAAapC,KAAK,IAAIe,EAAY,EAAGxB,GAAkB,EAAGC,IAC1D4C,EAAapC,KAAK,IAAIe,EAAY,EAAGxB,GAAkB,EAAGC,IAC1D4C,EAAapC,KAAK,IAAIe,EAAY,EAAGxB,GAAoB,IACzD6C,EAAapC,KAAK,IAAIe,EAAY,EAAGxB,GAAoB,IACzD6C,EAAapC,KAAK,IAAIe,EAAY,EAAGxB,GAAoB,IACzD6C,EAAapC,KAAK,IAAIe,EAAY,EAAGxB,GAAoB,IACzD6C,EAAapC,KAAK,IAAIe,EAAY,EAAGxB,GAAqB,IAC1D6C,EAAapC,KAAK,IAAIe,EAAY,GAAIxB,GAAqB,EAAGC,IAC9D4C,EAAapC,KAAK,IAAIe,EAAY,GAAIxB,GAAqB,IAC3D6C,EAAapC,KAAK,IAAIe,EAAY,GAAIxB,GAAqB,IAC3D6C,EAAapC,KAAK,IAAIe,EAAY,GAAIxB,GAAmB,IACzD6C,EAAapC,KAAK,IAAIe,EAAY,GAAIxB,GAAmB,EAAGC,IAC5D4C,EAAapC,KAAK,IAAIe,EAAY,GAAIxB,GAAmB,IACzD6C,EAAapC,KAAK,IAAIe,EAAY,GAAIxB,GAAmB,IAClD6C,EKH4CiE,IAHxC,mBAGNjE,EAHM,KAGQC,EAHR,OAIc6D,mBAAS,IAAIjC,GAJ3B,mBAIN1C,EAJM,KAIAY,EAJA,OAKc+D,mBAAS,MALvB,mBAKN7B,EALM,KAKAC,EALA,OEfA,WACb,IADiC,EAMP4B,mBALT,WACf,IAAMI,EAAchB,aAAaiB,QAAQ,SACnCC,EAAYC,KAAKC,MAAMJ,GAC7B,cAAOE,QAAP,IAAOA,OAAP,EAAOA,EAAW9D,MAEeiE,IANF,mBAM1BjE,EAN0B,KAMnBkE,EANmB,KAajC,MAAO,CACLA,SANgB,SAAAJ,GAChBlB,aAAaC,QAAQ,QAASkB,KAAKI,UAAUL,IAC7CI,EAASJ,EAAU9D,QAKnBA,SFMyBoE,GAEvBC,GARS,EAMNrE,MANM,EAMCkE,SAEM,IASpB,OAPGrF,EAAKN,SAAWxB,IACjBsH,GAAiB,WAEnBpC,QAAQC,IAAI7E,GACZ4E,QAAQC,IAAI/C,GACZ8C,QAAQC,IAAIxC,GACZuC,QAAQC,IAAIP,GACRA,EAKF,sBAAK7C,UAAU,MAAf,UACE,qBAAKA,UAAU,kBAAf,SACE,sBAAKA,UAAU,QAAf,UAEIzB,EAAMwC,KAAI,SAAArC,GACR,OGzCI,SAACA,GACf,IAAIsB,EAAY,GACVrB,EAASF,EAAqBC,GAuBpC,OAtBGA,EAAKhB,UAAYK,EAChBiC,EAAY,WACNtB,EAAKhB,UAAYK,EACvBiC,EAAY,aACNtB,EAAKhB,UAAYK,EACvBiC,EAAY,cACNtB,EAAKhB,UAAYK,IACvBiC,EAAY,aAEbtB,EAAKf,UACDe,EAAKhB,UAAYK,EAChBiC,GAAa,YAETtB,EAAKhB,UAAYK,EACrBiC,GAAa,eACPtB,EAAKhB,UAAYK,EACvBiC,GAAa,cACPtB,EAAKhB,UAAYK,IACvBiC,GAAa,gBAKjB,sBAAoBA,UAAS,eAAUA,GAAaE,MAAOvB,EAA3D,SACKD,EAAKd,QAAS,sBAAMoC,UAAU,gBAAhB,oBAA0C,MADlDtB,EAAKlB,IHeHgI,CAAU9G,MAInByB,EAAeJ,GAGfa,EAAaG,KAAI,SAAAG,GACf,OAAOoB,EAAU,CAACpB,QAAOnB,OAAMM,UAASc,gBAAeP,eAAcC,qBAAoBF,aAAYpC,kBAK7G,sBAAKyB,UAAU,WAAf,UACE,mCAAOI,EAAmBL,EAAMM,MAChC,qBACEL,UAAS,cAASuF,GAClB/C,QAAS,kBPOF,SAACzC,EAAMY,EAAYC,EAAcC,EAAoBR,GAClE,GAAGN,EAAKN,SAAYxB,EAA8B,CAC9C,IAAMuD,EAAU,EAAIiE,KAAKC,MAAsB,EAAhBD,KAAKE,UAEpChF,EAAW,2BACJZ,GADG,IAENyB,UACA/B,OAAQxB,KAqBZ4C,EAnBwBD,EAAaG,KAAI,SAAAG,GACrC,IAAMV,EAASH,EAAQE,MAAK,SAAAC,GAAM,OAAIA,EAAOhD,KAAO0D,EAAM1B,aAC1D,OAAG0B,EAAM1B,YAAcO,EAAKE,cACH,IAApBiB,EAAMtC,WAAwC,IAApBsC,EAAMtC,UAA+B,IAAZ4C,IACpDN,EAAMzB,SAAWzB,EAEbkD,EAAMtC,UAAY4B,EAAOpB,eAAiB8B,EAAMtC,SAAW4B,EAAOrB,SACtE+B,EAAMtC,SAAW4C,EAAUhB,EAAOrB,QACvB+B,EAEA,2BACAA,GADP,IAEIxB,UAAU,IAIXwB,OOhCE0E,CAAS7F,EAAMY,EAAYC,EAAcC,EAAoBR,IAF9E,SAIGN,EAAKN,SAAWxB,EAA+B8B,EAAKyB,QAAS,OAEhE,wBACExB,UAAU,cACV6F,SAAU9F,EAAKN,SAAWxB,GAAwB8B,EAAKN,SAAWxB,EAClEuE,QAAS,kBPlED,SAACzC,EAAMY,GACrBA,EAAW,2BACJZ,GADG,IAENN,OAAQxB,EACRyE,UAAW,EACXzC,WAAYlC,KO6DK+H,CAAU/F,EAAMY,IAHjC,wBAMA,wBACEX,UAAU,gBACV6F,SAAU5D,EAAkBlC,EAAMa,GAClC4B,QAAS,kBAAM9B,EAAYX,EAAMY,EAAYC,EAAcC,IAH7D,uBAMA,uBACA,uBACA,cAAC,EAAD,CAAQgC,KAAMA,EAAMC,WAAYA,UA5C7B,cAAC,EAAD,CAAOD,KAAMA,EAAMC,WAAYA,KIvB3BiD,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.15872f13.chunk.js","sourcesContent":["class Cell {\n    constructor(id, cellType, safeFor = null, homeFor = null, station = false) {\n        this.id = id;\n        this.cellType = cellType;\n        this.safeFor = safeFor;\n        this.homeFor = homeFor;\n        this.station = station;\n    }\n}\n\nexport default Cell;","const CELL_TYPE = {\n    normal: \"NORMAL\",\n    safe: \"SAFE\",\n    home: \"HOME\"\n};\n\nconst PLAYER_TYPE = {\n    red: \"RED\",\n    blue: \"BLUE\",\n    green: \"GREEN\",\n    yellow: \"YELLOW\"\n};\n\nconst TOKEN_STATUS = {\n    not_started: \"Not Started\",\n    active: \"active\",\n    finished: \"finished\"\n};\n\nconst GAME_STATUS = {\n    not_started: \"Not Started\",\n    animatig: \"animating\",\n    finished: \"finished\",\n    waiting_for_dice: \"Waiting for dice\",\n    waiting_for_token: \"Waiting for token\"\n};\n\nexport {\n    CELL_TYPE,\n    PLAYER_TYPE,\n    TOKEN_STATUS,\n    GAME_STATUS\n};","import Cell from '../actors/cell';\nimport { CELL_TYPE, PLAYER_TYPE } from '../constants';\n\nlet cellId = 0;\n\nconst createCellsUtil = (color1, color2) => {\n    let i = 0;\n    const cells = [];\n    cells.push(new Cell(cellId++, CELL_TYPE.normal));\n    cells.push(new Cell(cellId++, CELL_TYPE.safe, color1, null, true));\n    for(i = 0; i< 7; i++) {\n        cells.push(new Cell(cellId++, CELL_TYPE.normal));\n    }\n    cells.push(new Cell(cellId++, null, null, null, true))\n    \n    for(i = 0; i< 3; i++) {\n        cells.push(new Cell(cellId++, CELL_TYPE.normal));\n    }\n\n    for(i = 0; i< 5; i++) {\n        cells.push(new Cell(cellId++, CELL_TYPE.safe, color2));\n    }\n    cells.push(new Cell(cellId++, CELL_TYPE.home, color2, color2));\n    return cells;\n};\n\nconst createCells = () => {\n    cellId = 0;\n    const cells = [];\n    cells.push(...createCellsUtil( PLAYER_TYPE.red,  PLAYER_TYPE.green));\n    cells.push(...createCellsUtil( PLAYER_TYPE.green,  PLAYER_TYPE.yellow));\n    cells.push(...createCellsUtil( PLAYER_TYPE.yellow,  PLAYER_TYPE.blue));\n    cells.push(...createCellsUtil( PLAYER_TYPE.blue,  PLAYER_TYPE.red));\n\n    return cells;\n}\n\nconst getCellPostionStyles = (cell) => {\n    const styles = {\n        position: 'absolute',\n    }\n    // drawing bottom cells\n    if(cell.id < 6) {\n        styles.left = '300px'\n        styles.bottom = cell.id * 50 + 'px'\n    }\n    else if(cell.id >= 69 && cell.id <= 75 ) {\n        styles.bottom = (cell.id - 69) * 50 + 'px'\n        if(cell.id === 75) {\n            styles.left = '300px' // home cell\n        } else {\n            styles.left = '350px'\n        }\n    }\n    else if(cell.id >= 63 && cell.id <= 68 ) {\n        styles.left = '400px'\n        styles.bottom = 250 - (cell.id - 63) * 50 + 'px'\n    }\n    // drawing left cells\n    else if(cell.id >= 6 && cell.id <= 11) {\n        styles.left = 250 - (cell.id - 6) * 50 + 'px'\n        styles.top = '400px'\n    }\n    else if(cell.id >= 12 && cell.id <= 18 ) {\n        styles.left = (cell.id - 12) * 50 + 'px'\n        if(cell.id === 18) {\n            styles.top = '300px' // home cell\n        } else {\n            styles.top = '350px'\n        }\n    }\n    else if(cell.id >= 19 && cell.id <= 24 ) {\n        styles.left = (cell.id - 19) * 50 + 'px'\n        styles.top = '300px'\n    }\n    // drawing top cells\n    else if(cell.id >= 25 && cell.id <= 30) {\n        styles.left = '300px'\n        styles.bottom = 450 + (cell.id - 25) * 50 + 'px'\n    }\n    else if(cell.id >= 31 && cell.id <= 37 ) {\n        if(cell.id === 37) { // home cell\n            styles.left = '300px'\n            styles.bottom = 450 + 224 - (cell.id - 31) * 50 + 'px' \n        } else {\n            styles.left = '350px'\n            styles.bottom = 450 + 250 - (cell.id - 31) * 50 + 'px'\n        }\n    }\n    else if(cell.id >= 38 && cell.id <= 43 ) {\n        styles.left = '400px'\n        styles.bottom = 450 + 250 - (cell.id - 38) * 50 + 'px'\n    }\n    // drawing right cells\n    else if(cell.id >= 44 && cell.id <= 49) {\n        styles.left = 450 + (cell.id - 44) * 50 + 'px'\n        styles.top = '300px'\n    }\n    else if(cell.id >= 50 && cell.id <= 56 ) {\n        if(cell.id === 56) { // home cell\n            styles.left = 400 + 224 - (cell.id - 51) * 50 + 'px'\n            styles.top = '300px' \n        } else {\n            styles.left = 400 + 250 - (cell.id - 51) * 50 + 'px'\n            styles.top = '350px'\n        }\n    }\n    else if(cell.id >= 57 && cell.id <= 62 ) {\n        styles.left = 450 + 250 - (cell.id - 57) * 50 + 'px'\n        styles.top = '400px'\n    }\n\n    return styles;\n}\n\nexport {\n    createCells,\n    getCellPostionStyles\n};\n","class Player {\n    constructor(id, label, startCell, endCell, homeStartCell, skippedCells) {\n        this.id = id;\n        this.label = label;\n        this.tokenRemaining = 1; // TODO: revert it back to 4\n        this.startCell = startCell;\n        this.endCell = endCell;\n        this.homeStartCell = homeStartCell;\n        this.skippedCells = skippedCells;\n    }\n}\n\nexport default Player;","import { TOKEN_STATUS } from \"../constants\";\n\nclass PlayerToken {\n    constructor(id, player_id, position, status = TOKEN_STATUS.not_started) {\n        this.id = id;\n        this.player_id = player_id;\n        this.position = position;\n        this.status = status;\n        this.focussed = false;\n    }\n}\n\nexport default PlayerToken;","import { PLAYER_TYPE } from '../constants';\n\nconst getStartPostionStyles = (color) => {\n    const styles = {};\n\n    if(color === PLAYER_TYPE.red) {\n        styles.left = '0px';\n        styles.bottom = '0px';\n    } else if(color === PLAYER_TYPE.green) {\n        styles.left = '0px';\n        styles.top = '0px';\n    } else if(color === PLAYER_TYPE.yellow) {\n        styles.right = '0px';\n        styles.top = '0px';\n    } else if(color === PLAYER_TYPE.blue) {\n        styles.right = '0px';\n        styles.bottom = '0px';\n    }\n    return styles;\n\n}\n\nexport default getStartPostionStyles;","import getStartPostionStyles from '../utils/start';\nimport { GAME_STATUS, PLAYER_TYPE } from '../constants';\n\nconst drawStartRect = (game, color) => {\n    const styles = getStartPostionStyles(color);\n    let className = \"\";\n    if(color === PLAYER_TYPE.red) {\n        className += \"red-safe\";\n    } else if(color === PLAYER_TYPE.green) {\n        className += \"green-safe\";\n    } else if(color === PLAYER_TYPE.yellow) {\n        className += \"yellow-safe\";\n    } else if(color === PLAYER_TYPE.blue) {\n        className += \"blue-safe\";\n    }\n    if(game.status === GAME_STATUS.waiting_for_dice && game.playerTurn === color) {\n        className += \" blink \";\n    }\n    return (\n        <div key={color} className={`start ${className}`} style={styles}>\n            <div className=\"start-circle start-circle--top\"></div>\n            <div className=\"start-circle start-circle--top\"></div>\n            <div className=\"start-circle start-circle--bottom\"></div>\n            <div className=\"start-circle start-circle--bottom\"></div>\n        </div>\n    );\n}\n\nconst drawStartRects = (game) => {\n    // drawing red\n    return (\n       <div>\n           {\n                drawStartRect(game, PLAYER_TYPE.red)\n           }{\n                drawStartRect(game, PLAYER_TYPE.green)\n           }{\n                drawStartRect(game, PLAYER_TYPE.yellow)\n           } {\n                drawStartRect(game, PLAYER_TYPE.blue)\n           }\n       </div>\n    );\n    \n}\n\nexport {\n    drawStartRects\n};","import { GAME_STATUS, PLAYER_TYPE, TOKEN_STATUS } from \"../constants\"\n\nconst startGame = (game, updateGame) => {\n    updateGame({\n        ...game,\n        status: GAME_STATUS.waiting_for_dice,\n        turnCount: 0,\n        playerTurn: PLAYER_TYPE.red\n    });\n};\n\n\nconst getGameStatusLabel = (game, players) => {\n    let label = \"\";\n    if(game.status === GAME_STATUS.finished) {\n        const winningPlayer = players.find(player => player.tokenRemaining === 0);\n        label += `Game finished: ${winningPlayer.label} Wins.`;\n    } else if(game.status === GAME_STATUS.not_started ) {\n        label += \"Game is not started - Click on the Start Game button\";\n    } else {\n        const activePlayer = players.find(player => player.id === game.playerTurn);\n        label += `Waiting for ${activePlayer.label}`;\n        if(game.status === GAME_STATUS.waiting_for_dice) {\n            label += \"- Click on the box to roll the dice\";\n        } else if(game.status === GAME_STATUS.waiting_for_token) {\n            label += \"- Select one of the tokens for the move\";\n        }\n    }\n    return label;\n};\n\nconst changeTurns = (game, updateGame, playerTokens, updatePlayerTokens) => {\n    let playerTurn; \n    if(game.playerTurn === PLAYER_TYPE.red) {\n        playerTurn = PLAYER_TYPE.green;\n    } else if(game.playerTurn === PLAYER_TYPE.green) {\n        playerTurn = PLAYER_TYPE.yellow;\n    } else if(game.playerTurn === PLAYER_TYPE.yellow) {\n        playerTurn = PLAYER_TYPE.blue;\n    } else if(game.playerTurn === PLAYER_TYPE.blue) {\n        playerTurn = PLAYER_TYPE.red;\n    }\n    updateGame({\n        ...game,\n        playerTurn,\n        status: GAME_STATUS.waiting_for_dice\n    });\n    endTurn(playerTokens, updatePlayerTokens);\n};\n\nconst preserveTurns = (game, updateGame, playerTokens, updatePlayerTokens) => {\n    updateGame({\n        ...game,\n        status: GAME_STATUS.waiting_for_dice\n    });\n    endTurn(playerTokens, updatePlayerTokens);\n};\n\nconst endTurn = (playerTokens, updatePlayerTokens) => {\n    const newPlayerTokens = playerTokens.map((playerToken) => {\n        return {\n            ...playerToken,\n            focussed: false\n        }\n    });\n    updatePlayerTokens(newPlayerTokens);\n};\n\nconst rollDice = (game, updateGame, playerTokens, updatePlayerTokens, players) => {\n    if(game.status ===  GAME_STATUS.waiting_for_dice) {\n        const diceVal = 1 + Math.floor(Math.random() * 6);\n        \n        updateGame({\n            ...game,\n            diceVal,\n            status: GAME_STATUS.waiting_for_token\n        });\n        const newPlayerTokens = playerTokens.map(token => {\n            const player = players.find(player => player.id === token.player_id);\n            if(token.player_id === game.playerTurn &&\n                (token.position !== -1 || (token.position === -1 && diceVal === 6)) &&\n                token.status !== TOKEN_STATUS.finished   \n            ) {\n                if((token.position >= player.homeStartCell && token.position < player.endCell) &&\n                token.position + diceVal > player.endCell) {\n                    return token;\n                } else {\n                    return {\n                        ...token,\n                        focussed: true\n                    }\n                }   \n            } else {\n                return token;\n            }\n        });\n        updatePlayerTokens(newPlayerTokens);\n    }\n};\n\nconst moveToken = (diceVal, token, player) => {\n    let cellIndex = token.position;\n    let status = token.status;\n    if(token.status === TOKEN_STATUS.not_started) {\n        cellIndex = player.startCell;\n        status = TOKEN_STATUS.active;\n    } else {\n        while(diceVal) {\n            cellIndex++;\n            while(player.skippedCells.includes(cellIndex)) {\n                cellIndex++;\n                if(cellIndex === 76) {\n                    cellIndex = 0;\n                }\n            }\n            diceVal--;\n            \n            if(cellIndex === 76) {\n                cellIndex = 0;\n            }\n        }\n    }\n    // token has reached home\n    if(cellIndex === player.endCell) {\n        status = TOKEN_STATUS.finished;\n    }\n    return {\n        ...token,\n        position: cellIndex,\n        status\n    }\n};\n\nconst updateTokenPostion = ({ token, game, players, updatePlayers, playerTokens, updatePlayerTokens, updateGame, cells }) => {\n    if(game.status === GAME_STATUS.waiting_for_token && token.focussed) {\n        const player = players.find(player => player.id === token.player_id);\n        const tokenIndex = playerTokens.findIndex(pToken => pToken.id === token.id);\n        const newToken = moveToken(game.diceVal, token, player);\n        // finding out if another token of different player was already at that cell\n        let existingTokenIndex = playerTokens.findIndex(pToken =>\n            pToken.position === newToken.position &&\n            pToken.player_id !== newToken.player_id);\n        if(existingTokenIndex !== -1 && !cells[newToken.position].station) {\n            playerTokens[existingTokenIndex].position = -1;\n            playerTokens[existingTokenIndex].status = TOKEN_STATUS.not_started;\n        }\n        playerTokens[tokenIndex] = newToken;\n        // after the move all tokens are un-focussed\n        // const newPlayerTokens = playerTokens.map((playerToken) => {\n        //     return {\n        //         ...playerToken,\n        //         focussed: false\n        //     }\n        // });\n        // updatePlayerTokens(newPlayerTokens);\n        \n\n        // updating player if token has reached home\n        if(newToken.status === TOKEN_STATUS.finished) {\n            const playerIndex = players.findIndex(player => player.id === newToken.player_id);\n            players[playerIndex].tokenRemaining--;\n            if(players[playerIndex].tokenRemaining === 0) {\n                finishGame(game, updateGame, players[playerIndex]);\n            }\n            updatePlayers([...players]);\n        }\n        \n        if(newToken.status === TOKEN_STATUS.finished || game.diceVal === 6) {\n            preserveTurns(game, updateGame, playerTokens, updatePlayerTokens);\n        } else {\n            // change turns only when a token has not finished or diceVal is not 6\n            changeTurns(game, updateGame, playerTokens, updatePlayerTokens);\n        }\n    }\n}\n\nconst finishGame = (game, updateGame, player) => {\n    updateGame({\n        ...game,\n        status: GAME_STATUS.finished,\n        winner: player.id\n    });\n};\n\nconst disableSkipButton = (game, playerTokens) => {\n    const focussedTokens = playerTokens.filter(pToken => pToken.player_id === game.playerTurn && pToken.focussed);\n    const waitingForTokens = game.status === GAME_STATUS.waiting_for_token\n    const enableSkipButton = focussedTokens.length === 0 && waitingForTokens;\n\n    return !enableSkipButton;\n};\n\nexport {\n    startGame,\n    getGameStatusLabel,\n    rollDice,\n    updateTokenPostion,\n    changeTurns,\n    disableSkipButton\n}","import { GAME_STATUS, PLAYER_TYPE } from '../constants';\nimport { updateTokenPostion } from '../utils/game';\nimport { getTokenPostionStyles } from '../utils/playerTokens';\n\nconst drawToken = ({token, game, players, updatePlayers, playerTokens, updatePlayerTokens, updateGame, cells }) => {\n    const styles = getTokenPostionStyles(token);\n    let className = '';\n    if(token.player_id === PLAYER_TYPE.red) {\n        className += 'red-token';\n    } else if(token.player_id === PLAYER_TYPE.green) {\n        className += 'green-token';\n    } else if(token.player_id === PLAYER_TYPE.yellow) {\n        className += 'yellow-token';\n    } else if(token.player_id === PLAYER_TYPE.blue) {\n        className += 'blue-token';\n    }\n    if(game.status === GAME_STATUS.waiting_for_token) {\n        if(game.playerTurn === PLAYER_TYPE.red && token.focussed) {\n            className += ' red-token--active blink';\n        } else if(game.playerTurn === PLAYER_TYPE.green && token.focussed) {\n            className += ' green-token--active blink';\n        } else if(game.playerTurn === PLAYER_TYPE.yellow && token.focussed) {\n            className += ' yellow-token--active blink';\n        } else if(game.playerTurn === PLAYER_TYPE.blue && token.focussed) {\n            className += ' blue-token--active blink';\n        }\n    }\n    return (\n        <div\n            key={token.id}\n            className={`token ${className}`}\n            style={styles}\n            onClick={() => updateTokenPostion({ token, game, players, updatePlayers, playerTokens, updatePlayerTokens, updateGame, cells })}\n        >\n            \n        </div>\n    );\n};\n\nexport {\n    drawToken\n};","\nimport PlayerToken from \"../actors/playerToken\";\nimport { getCellPostionStyles } from \"./cells\";\nimport { PLAYER_TYPE, TOKEN_STATUS } from \"../constants\";\n\nconst createPlayerTokens = () => {\n    const playerTokens = [];\n    playerTokens.push(new PlayerToken(1, PLAYER_TYPE.red, -1));\n    playerTokens.push(new PlayerToken(2, PLAYER_TYPE.red, -1, TOKEN_STATUS.not_started));\n    playerTokens.push(new PlayerToken(3, PLAYER_TYPE.red, -1, TOKEN_STATUS.not_started));\n    playerTokens.push(new PlayerToken(4, PLAYER_TYPE.red, -1, TOKEN_STATUS.not_started));\n    playerTokens.push(new PlayerToken(5, PLAYER_TYPE.green, -1));\n    playerTokens.push(new PlayerToken(6, PLAYER_TYPE.green, -1));\n    playerTokens.push(new PlayerToken(7, PLAYER_TYPE.green, -1));\n    playerTokens.push(new PlayerToken(8, PLAYER_TYPE.green, -1));\n    playerTokens.push(new PlayerToken(9, PLAYER_TYPE.yellow, -1));\n    playerTokens.push(new PlayerToken(10, PLAYER_TYPE.yellow, -1, TOKEN_STATUS.not_started));\n    playerTokens.push(new PlayerToken(11, PLAYER_TYPE.yellow, -1));\n    playerTokens.push(new PlayerToken(12, PLAYER_TYPE.yellow, -1));\n    playerTokens.push(new PlayerToken(13, PLAYER_TYPE.blue, -1));\n    playerTokens.push(new PlayerToken(14, PLAYER_TYPE.blue, -1, TOKEN_STATUS.not_started));\n    playerTokens.push(new PlayerToken(15, PLAYER_TYPE.blue, -1));\n    playerTokens.push(new PlayerToken(16, PLAYER_TYPE.blue, -1));\n    return playerTokens;\n}\n\nconst getTokenPostionStyles = (token) => {\n    let styles = {};\n    if(token.status === TOKEN_STATUS.not_started) {\n        // TODO: separate the tokens\n        if(token.player_id === PLAYER_TYPE.red) {\n            styles.left = '150px';\n            styles.bottom = '150px';\n            if(token.id === 1) {\n                styles.left = '65px';\n                styles.bottom = '185px';\n            } else if(token.id === 2){\n                styles.left = '180px';\n                styles.bottom = '185px';\n            } else if(token.id === 3){\n                styles.left = '65px';\n                styles.bottom = '55px';\n            } else if(token.id === 4){\n                styles.left = '180px';\n                styles.bottom = '55px';\n            }  \n        } else if(token.player_id === PLAYER_TYPE.green) {\n            if(token.id === 5) {\n                styles.left = '65px';\n                styles.top = '200px';\n            } else if(token.id === 6){\n                styles.left = '180px';\n                styles.top = '200px';\n            } else if(token.id === 7){\n                styles.left = '65px';\n                styles.top = '55px';\n            } else if(token.id === 8){\n                styles.left = '180px';\n                styles.top = '55px';\n            }\n        } else if(token.player_id === PLAYER_TYPE.yellow) {\n            if(token.id === 9) {\n                styles.right = '65px';\n                styles.top = '200px';\n            } else if(token.id === 10){\n                styles.right = '180px';\n                styles.top = '200px';\n            } else if(token.id === 11){\n                styles.right = '65px';\n                styles.top = '55px';\n            } else if(token.id === 12){\n                styles.right = '180px';\n                styles.top = '55px';\n            }\n        } else if(token.player_id === PLAYER_TYPE.blue) {\n            if(token.id === 13) {\n                styles.right = '65px';\n                styles.bottom = '185px';\n            } else if(token.id === 14){\n                styles.right = '180px';\n                styles.bottom = '185px';\n            } else if(token.id === 15){\n                styles.right = '65px';\n                styles.bottom = '55px';\n            } else if(token.id === 16){\n                styles.right = '180px';\n                styles.bottom = '55px';\n            }\n        }\n    } else if(token.status === TOKEN_STATUS.finished) {\n        if(token.player_id === PLAYER_TYPE.red) {\n            styles.left = '350px';\n            styles.bottom = '300px'\n        } else if(token.player_id === PLAYER_TYPE.green) {\n            styles.left = '300px';\n            styles.top = '350px';\n        } else if(token.player_id === PLAYER_TYPE.yellow) {\n            styles.left = '350px';\n            styles.bottom = '400px';\n        } else if(token.player_id === PLAYER_TYPE.blue) {\n            styles.left = '400px';\n            styles.top = '350px';\n        }\n    } else if(token.status === TOKEN_STATUS.active && token.position !== -1) {\n        styles = getCellPostionStyles({id: token.position});\n    }\n    return styles;\n};\n\nexport {\n    createPlayerTokens,\n    getTokenPostionStyles\n};","import { GAME_STATUS } from \"../constants\";\n\nclass Game {\n    constructor() {\n        this.status = GAME_STATUS.not_started;\n        this.turnCount = 0; // not used\n        this.playerTurn = null;\n        this.diceVal = null;\n        this.winner = null;\n    }\n}\n\nexport default Game;","import React from 'react';\n\nimport { GoogleLogin } from 'react-google-login';\n// refresh token\nimport { refreshTokenSetup } from '../../utils/refreshTokenSetup';\nimport './Login.css';\n\nconst clientId =\n  '386851791646-o7hhcfta2pdgri2hsipjaa695eeeovoj.apps.googleusercontent.com';\n\nfunction Login(props) {\n    const { user, updateUser } = props;\n  const onSuccess = (res) => {\n    console.log('Login Success: currentUser:', res.profileObj);\n    updateUser(res.profileObj.name);\n    refreshTokenSetup(res);\n  };\n\n  const onFailure = (res) => {\n    console.log('Login failed: res:', res);\n  };\n\n  return (\n    <div className=\"login-wrapper\">\n      <h2>Login to play Ludo</h2>\n      <GoogleLogin\n        clientId={clientId}\n        buttonText=\"Login\"\n        onSuccess={onSuccess}\n        onFailure={onFailure}\n        cookiePolicy={'single_host_origin'}\n        style={{ marginTop: '100px' }}\n        isSignedIn={true}\n      />\n    </div>\n  );\n}\n\nexport default Login;","export const refreshTokenSetup = (res) => {\n  // Timing to renew access token\n  let refreshTiming = (res.tokenObj.expires_in || 3600 - 5 * 60) * 1000;\n\n  const refreshToken = async () => {\n    const newAuthRes = await res.reloadAuthResponse();\n    refreshTiming = (newAuthRes.expires_in || 3600 - 5 * 60) * 1000;\n    console.log('newAuthRes:', newAuthRes);\n    // saveUserToken(newAuthRes.access_token);  <-- save new token\n    localStorage.setItem('authToken', newAuthRes.id_token);\n\n    // Setup the other timer after the first one\n    setTimeout(refreshToken, refreshTiming);\n  };\n\n  // Setup first refresh timer\n  setTimeout(refreshToken, refreshTiming);\n};","import React from 'react';\nimport { GoogleLogout } from 'react-google-login';\n\nconst clientId =\n  '386851791646-oiaar3v69kin8s10iuva8uouvjj5b3c7.apps.googleusercontent.com';\n\nfunction Logout(props) {\n  const onSuccess = () => {\n    console.log('Logout made successfully');\n    props.updateUser(null);\n  };\n\n  return (\n    <div>\n      <GoogleLogout\n        clientId={clientId}\n        buttonText={`Logout ${props.user}`}\n        onLogoutSuccess={onSuccess}\n      ></GoogleLogout>\n    </div>\n  );\n}\n\nexport default Logout;","import React, { useState } from 'react';\nimport { createCells } from './utils/cells';\nimport { createPlayers } from './utils/players';\nimport { createPlayerTokens } from './utils/playerTokens';\n\nimport './App.css';\nimport { drawCells } from './components/Cell';\nimport { drawStartRects } from './components/Start';\nimport { drawToken } from './components/Tokens';\nimport Game from './actors/game';\nimport { GAME_STATUS } from './constants';\nimport { getGameStatusLabel, rollDice, startGame, changeTurns, disableSkipButton } from './utils/game';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport useToken from './components/useToken';\nimport Login from './components/Login/Login';\nimport Logout from './components/Logout';\n\nfunction App() {\n  const [cells, updateCells] = useState(createCells());\n  const [players, updatePlayers] = useState(createPlayers());\n  const [playerTokens, updatePlayerTokens ] = useState(createPlayerTokens());\n  const [game, updateGame] = useState(new Game());\n  const [user, updateUser] = useState(null);\n  const {token, setToken } = useToken();\n\n  let diceClassName = '';\n\n  if(game.status === GAME_STATUS.waiting_for_dice) {\n    diceClassName += \" blink \";\n  }\n  console.log(cells);\n  console.log(players);\n  console.log(playerTokens);\n  console.log(user);\n  if(!user) {\n    return <Login user={user} updateUser={updateUser}/>\n  }\n  return (\n    \n    <div className=\"app\">\n      <div className=\"board-container\">\n        <div className=\"board\">\n          {\n            cells.map(cell => {\n              return drawCells(cell);\n            })\n          }\n          {\n            drawStartRects(game)\n          }\n          {\n            playerTokens.map(token => {\n              return drawToken({token, game, players, updatePlayers, playerTokens, updatePlayerTokens, updateGame, cells});\n            })\n          }\n        </div>\n      </div>\n      <div className=\"controls\">\n        <h2> { getGameStatusLabel(game, players)}</h2>\n        <div\n          className={`dice${diceClassName}`}\n          onClick={() => rollDice(game, updateGame, playerTokens, updatePlayerTokens, players)}\n        >\n          {game.status === GAME_STATUS.waiting_for_token? game.diceVal: null}\n        </div>\n        <button\n          className=\"btn-primary\"\n          disabled={game.status !== GAME_STATUS.finished && game.status !== GAME_STATUS.not_started}\n          onClick={() => startGame(game, updateGame)}>\n          Start Game\n        </button>\n        <button\n          className=\"btn-secondary\"\n          disabled={disableSkipButton(game, playerTokens)}\n          onClick={() => changeTurns(game, updateGame, playerTokens, updatePlayerTokens)}>\n          Skip Turn\n        </button>\n        <br></br>\n        <hr></hr>\n        <Logout user={user} updateUser={updateUser}/>\n      </div>\n      \n    </div>\n  );\n}\n\nexport default App;","import Player from \"../actors/player\";\nimport { PLAYER_TYPE } from \"../constants\";\n\nconst createPlayers = () => {\n    const players = [];\n    players.push(new Player(PLAYER_TYPE.red, 'Player 1', 1, 75, 69,\n    [0, 13, 14, 15, 16, 17, 18, 32, 33, 34, 35, 36, 37, 51, 52, 53, 54, 55, 56]));\n    players.push(new Player(PLAYER_TYPE.green, 'Player 2', 20, 18, 12,\n    [19, 32, 33, 34, 35, 36, 37, 51, 52, 53, 54, 55, 56, 70, 71, 72, 73, 74, 75]));\n    players.push(new Player(PLAYER_TYPE.yellow, 'Player 3', 39, 37, 31,\n    [38, 13, 14, 15, 16, 17, 18, 51, 52, 53, 54, 55, 56, 70, 71, 72, 73, 74, 75]));\n    players.push(new Player(PLAYER_TYPE.blue, 'Player 4', 58, 56, 50,\n    [57, 13, 14, 15, 16, 17, 18, 32, 33, 34, 35, 36, 37, 70, 71, 72, 73, 74, 75]));\n    return players;\n}\n\nexport {\n    createPlayers\n};","import { useState } from 'react';\n\nexport default function useToken() {\n  const getToken = () => {\n    const tokenString = localStorage.getItem('token');\n    const userToken = JSON.parse(tokenString);\n    return userToken?.token\n  };\n  const [token, setToken] = useState(getToken());\n\n  const saveToken = userToken => {\n    localStorage.setItem('token', JSON.stringify(userToken));\n    setToken(userToken.token);\n  };\n\n  return {\n    setToken: saveToken,\n    token\n  }\n}","import { PLAYER_TYPE } from '../constants';\nimport { getCellPostionStyles } from '../utils/cells';\n\nconst drawCells = (cell) => {\n    let className = '';\n    const styles = getCellPostionStyles(cell);\n    if(cell.safeFor === PLAYER_TYPE.red) {\n        className = 'red-safe'\n    } else if(cell.safeFor === PLAYER_TYPE.green) {\n        className = 'green-safe'\n    } else if(cell.safeFor === PLAYER_TYPE.yellow) {\n        className = 'yellow-safe'\n    } else if(cell.safeFor === PLAYER_TYPE.blue) {\n        className = 'blue-safe'\n    }\n    if(cell.homeFor) {\n        if(cell.safeFor === PLAYER_TYPE.red) {\n            className += ' arrow-up'\n        }\n        else if(cell.safeFor === PLAYER_TYPE.green) {\n            className += ' arrow-right'\n        } else if(cell.safeFor === PLAYER_TYPE.yellow) {\n            className += ' arrow-down'\n        } else if(cell.safeFor === PLAYER_TYPE.blue) {\n            className += ' arrow-left'\n        }\n    }\n    \n    return (\n        <span key={cell.id} className={`cell ${className}`} style={styles}>\n            {cell.station? <span className=\"cell--station\">★</span>: null}\n        </span>\n    );\n};\n\n\nexport {\n    drawCells\n};","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}